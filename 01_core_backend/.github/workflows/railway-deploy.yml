# Railway Deployment Workflow
# Automated deployment to Railway platform

name: Deploy to Railway

on:
  push:
    branches: 
      - main
      - develop
    paths:
      - '01_core_backend/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  WORKING_DIRECTORY: ./01_core_backend

jobs:
  # =====================================
  # Pre-deployment Validation
  # =====================================
  validate:
    name: Validate Deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          
      - name: Validate Railway configuration
        run: |
          # Check if required files exist
          if [ ! -f "railway.json" ]; then
            echo "‚ùå railway.json not found"
            exit 1
          fi
          
          if [ ! -f "Dockerfile.railway" ]; then
            echo "‚ùå Dockerfile.railway not found"
            exit 1
          fi
          
          echo "‚úÖ Railway configuration validated"

  # =====================================
  # Deploy to Railway
  # =====================================
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: validate
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Railway CLI
        run: |
          npm install -g @railway/cli
          
      - name: Deploy to Railway
        id: deploy
        run: |
          # Set Railway token
          export RAILWAY_TOKEN="${{ secrets.RAILWAY_TOKEN }}"
          
          # Determine environment and use unique service names
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "üöÄ Deploying to production..."
            railway up --service studyai-core-backend-prod
            echo "url=https://studyai-core-backend-prod.railway.app" >> $GITHUB_OUTPUT
          else
            echo "üß™ Deploying to staging..."
            railway up --service studyai-core-backend-staging
            echo "url=https://studyai-core-backend-staging.railway.app" >> $GITHUB_OUTPUT
          fi
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for deployment to be ready..."
          sleep 30
          
      - name: Health check
        id: health
        run: |
          max_attempts=10
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            if curl -f "${{ steps.deploy.outputs.url }}/health" >/dev/null 2>&1; then
              echo "‚úÖ Health check passed"
              exit 0
            fi
            
            echo "‚è≥ Health check attempt $attempt/$max_attempts failed, retrying..."
            sleep 15
            attempt=$((attempt + 1))
          done
          
          echo "‚ùå Health check failed after $max_attempts attempts"
          exit 1
          
      - name: Run smoke tests
        run: |
          base_url="${{ steps.deploy.outputs.url }}"
          
          # Test health endpoint
          if ! curl -f "$base_url/health"; then
            echo "‚ùå Health endpoint failed"
            exit 1
          fi
          
          # Test status endpoint
          if ! curl -f "$base_url/status"; then
            echo "‚ùå Status endpoint failed"
            exit 1
          fi
          
          # Test metrics endpoint
          if ! curl -f "$base_url/metrics"; then
            echo "‚ùå Metrics endpoint failed"
            exit 1
          fi
          
          echo "‚úÖ All smoke tests passed"
          
      - name: Update deployment status
        if: always()
        run: |
          if [ "${{ steps.health.outcome }}" = "success" ]; then
            echo "üéâ Deployment successful!"
            echo "URL: ${{ steps.deploy.outputs.url }}"
          else
            echo "‚ùå Deployment failed"
            # Trigger rollback if needed
            railway rollback --service studyai-core-backend-${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
          fi

  # =====================================
  # Notify Team
  # =====================================
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ needs.deploy.result }}
          text: |
            Railway Deployment ${{ needs.deploy.result }}!
            
            Environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            
            ${{ needs.deploy.result == 'success' && 'üöÄ Deployment completed successfully!' || '‚ùå Deployment failed - check logs' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # =====================================
  # Performance Testing (Staging Only)
  # =====================================
  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref != 'refs/heads/main' && needs.deploy.result == 'success'
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run performance tests
        run: |
          # Set the test base URL to Railway staging
          export TEST_BASE_URL="https://studyai-core-backend-staging.railway.app"
          npm run performance:quick
        continue-on-error: true
        
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: railway-performance-results
          path: ${{ env.WORKING_DIRECTORY }}/reports/
          retention-days: 7