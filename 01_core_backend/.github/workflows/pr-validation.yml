# Pull Request Validation Workflow
# Lightweight checks for pull requests

name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - '01_core_backend/**'

env:
  NODE_VERSION: '20'
  WORKING_DIRECTORY: ./01_core_backend

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run basic tests
        run: npm test
        env:
          NODE_ENV: test
          
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified
          
      - name: Validate Docker build
        run: |
          docker build -t studyai-test --target production .
          docker run --rm studyai-test node -e "console.log('Build validation successful')"
          
      - name: Comment PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('PR Validation')
            );
            
            const body = `## PR Validation Results
            
            âœ… Linting: Passed
            âœ… Tests: Passed  
            âœ… Security: Passed
            âœ… Docker Build: Passed
            
            Ready for review! ðŸš€`;
            
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }